for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/4_Mixed/mixed_5000burn_100gen_", i, "_popstats.txt"), header = T)
mixed_df <- rbind(mixed_df, df)
}
mixed_df$PopulationID <- rep(1:2, each = 101)
mixed_df$Generation <- mixed_df$Generation -5000
View(related_df)
View(genload_df)
View(rm_df)
View(genload_df)
View(mixed_df)
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- genload_df[genload_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, mean(generation$MeanFitness))
gen <- c(gen, i)
}
mean_genload_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_genload_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- rm_df[rm_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, generation$MeanFitness)
gen <- c(gen, i)
}
mean_rm_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_rm_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- related_df[related_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, generation$MeanFitness)
gen <- c(gen, i)
}
mean_related_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_related_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
View(mean_related_df)
View(mean_rm_df)
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- rm_df[rm_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, generation$MeanFitness)
gen <- c(gen, i)
}
mean_rm_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_rm_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- rm_df[rm_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, generation$MeanFitness)
gen <- c(gen, i)
}
mean_rm_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_rm_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- rm_df[rm_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, generation$MeanFitness)
gen <- c(gen, i)
}
mean_rm_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_rm_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- rm_df[rm_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, generation$MeanFitness)
gen <- c(gen, i)
}
mean_rm_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_rm_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- rm_df[rm_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, mean(generation$MeanFitness))
gen <- c(gen, i)
}
mean_rm_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_rm_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
View(mean_rm_df)
# Load random mating
rm_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/1_Random-Relatedness/random-relatedness_5000burn_100gen_1_popstats.txt", header = T)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/1_Random-Relatedness/random-relatedness_5000burn_100gen_", i, "_popstats.txt"), header = T)
rm_df <- rbind(rm_df, df)
}
rm_df$Generation <- rm_df$Generation - 5000
rm_df$PopulationID <- rep(1:2, each = 101)
# load genetic_load regime
genload_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/3_Genetic-Load/genetic_load_5000burn_100gen_1_popstats.txt", header = T)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/3_Genetic-Load/genetic_load_5000burn_100gen_", i, "_popstats.txt"), header = T)
genload_df <- rbind(genload_df, df)
}
genload_df$Generation <- genload_df$Generation - 5000
genload_df$PopulationID <- rep(1:2, each = 101)
#load relatedness model
related_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/2_Relatedness/relatedness_5000burn_100gen_1_popstats.txt", header = T, row.names = NULL)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/2_Relatedness/relatedness_5000burn_100gen_", i, "_popstats.txt"), header = T, row.names = NULL)
related_df <- rbind(related_df, df)
}
#related_df$Generation <- related_df$Generation -5000
related_df$PopulationID <- rep(1:2, each = 101)
#load genetic + relatedness
mixed_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/4_Mixed/mixed_5000burn_100gen_1_popstats.txt", header = T, row.names = NULL)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/4_Mixed/mixed_5000burn_100gen_", i, "_popstats.txt"), header = T, row.names = NULL)
mixed_df <- rbind(mixed_df, df)
}
mixed_df$PopulationID <- rep(1:2, each = 101)
mixed_df$Generation <- mixed_df$Generation -5000
View(mean_related_df)
View(mixed_df)
library(ggplot2)
library(patchwork)
# Load random mating
rm_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/1_Random-Relatedness/random-relatedness_5000burn_100gen_1_popstats.txt", header = T)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/1_Random-Relatedness/random-relatedness_5000burn_100gen_", i, "_popstats.txt"), header = T)
rm_df <- rbind(rm_df, df)
}
rm_df$Generation <- rm_df$Generation - 5000
rm_df$PopulationID <- rep(1:2, each = 101)
# load genetic_load regime
genload_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/3_Genetic-Load/genetic_load_5000burn_100gen_1_popstats.txt", header = T)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/3_Genetic-Load/genetic_load_5000burn_100gen_", i, "_popstats.txt"), header = T)
genload_df <- rbind(genload_df, df)
}
genload_df$Generation <- genload_df$Generation - 5000
genload_df$PopulationID <- rep(1:2, each = 101)
#load relatedness model
related_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/2_Relatedness/relatedness_5000burn_100gen_1_popstats.txt", header = T)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/2_Relatedness/relatedness_5000burn_100gen_", i, "_popstats.txt"), header = T)
related_df <- rbind(related_df, df)
}
#related_df$Generation <- related_df$Generation -5000
related_df$PopulationID <- rep(1:2, each = 101)
#load genetic + relatedness
mixed_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/4_Mixed/mixed_5000burn_100gen_1_popstats.txt", header = T)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/4_Mixed/mixed_5000burn_100gen_", i, "_popstats.txt"), header = T)
mixed_df <- rbind(mixed_df, df)
}
mixed_df$PopulationID <- rep(1:2, each = 101)
mixed_df$Generation <- mixed_df$Generation -5000
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- genload_df[genload_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, mean(generation$MeanFitness))
gen <- c(gen, i)
}
mean_genload_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_genload_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- rm_df[rm_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, mean(generation$MeanFitness))
gen <- c(gen, i)
}
mean_rm_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_rm_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
realized_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = realized_load), color = "orange", size = 1 ) +  geom_line(data = mean_rm_df, aes(x = generation, y = realized_load), color = "lightgray", size = 1 ) +
theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
load_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = genetic_load), color = "orange", size = 1 ) +   theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
fitness_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = fitness), color = "orange", size = 1 ) +   theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
hetero_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = heterozygosity), color = "orange", size = 1 ) +   theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
combined_plot <- load_graph + realized_graph + fitness_graph + hetero_graph + plot_layout(ncol = 4)
print(combined_plot)
realized_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = realized_load), color = "orange", size = 1 ) +  geom_line(data = mean_rm_df, aes(x = generation, y = realized_load), color = "lightgray", size = 1 ) +
theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
load_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = genetic_load), color = "orange", size = 1 ) +  geom_line(data = mean_rm_df, aes(x = generation, y = genetic_load), color = "lightgray", size = 1 ) + theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
fitness_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = fitness), color = "orange", size = 1 ) +   theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
hetero_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = heterozygosity), color = "orange", size = 1 ) +   theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
combined_plot <- load_graph + realized_graph + fitness_graph + hetero_graph + plot_layout(ncol = 4)
print(combined_plot)
realized_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = realized_load), color = "orange", size = 1 ) +  geom_line(data = mean_rm_df, aes(x = generation, y = realized_load), color = "lightgray", size = 1 ) +
theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
load_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = genetic_load), color = "orange", size = 1 ) +  geom_line(data = mean_rm_df, aes(x = generation, y = genetic_load), color = "lightgray", size = 1 ) + theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
fitness_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = fitness), color = "orange", size = 1 ) + geom_line(data = mean_rm_df, aes(x = generation, y = fitness), color = "lightgray", size = 1 ) +  theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
hetero_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = heterozygosity), color = "orange", size = 1 ) + geom_line(data = mean_rm_df, aes(x = generation, y = heterozygosity), color = "lightgray", size = 1 ) +  theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
combined_plot <- load_graph + realized_graph + fitness_graph + hetero_graph + plot_layout(ncol = 4)
print(combined_plot)
library(ggplot2)
library(patchwork)
# Load random mating
rm_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/1_Random-Relatedness/random-relatedness_5000burn_100gen_1_popstats.txt", header = T)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/1_Random-Relatedness/random-relatedness_5000burn_100gen_", i, "_popstats.txt"), header = T)
rm_df <- rbind(rm_df, df)
}
rm_df$Generation <- rm_df$Generation - 5000
rm_df$PopulationID <- rep(1:2, each = 101)
# load genetic_load regime
genload_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/3_Genetic-Load/genetic_load_5000burn_100gen_1_popstats.txt", header = T)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/3_Genetic-Load/genetic_load_5000burn_100gen_", i, "_popstats.txt"), header = T)
genload_df <- rbind(genload_df, df)
}
genload_df$Generation <- genload_df$Generation - 5000
genload_df$PopulationID <- rep(1:2, each = 101)
#load relatedness model
related_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/2_Relatedness/relatedness_5000burn_100gen_1_popstats.txt", header = T)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/2_Relatedness/relatedness_5000burn_100gen_", i, "_popstats.txt"), header = T)
related_df <- rbind(related_df, df)
}
#related_df$Generation <- related_df$Generation -5000
related_df$PopulationID <- rep(1:2, each = 101)
#load genetic + relatedness
mixed_df <- read.table("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/4_Mixed/mixed_5000burn_100gen_1_popstats.txt", header = T)
for(i in 2:2){
df <- read.table(paste0("C:/Users/besan/OneDrive/Bureau/Master MLS/Genpop/BreedingSimulator-main/BreedingSimulator/BreedingSimulator/1_Outputs/4_Mixed/mixed_5000burn_100gen_", i, "_popstats.txt"), header = T)
mixed_df <- rbind(mixed_df, df)
}
mixed_df$PopulationID <- rep(1:2, each = 101)
mixed_df$Generation <- mixed_df$Generation -5000
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- genload_df[genload_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, mean(generation$MeanFitness))
gen <- c(gen, i)
}
mean_genload_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_genload_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- rm_df[rm_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, mean(generation$MeanFitness))
gen <- c(gen, i)
}
mean_rm_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_rm_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- related_df[related_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$UniqueMutations))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, mean(generation$MeanFitness))
gen <- c(gen, i)
}
mean_related_df <- as.data.frame(cbind(gen, heterozygo, genetic_load, realized_load, fitness))
colnames(mean_related_df) <- c("generation", "heterozygosity", "genetic_load", "realized_load", "fitness")
heterozygo <- c()
genetic_load <- c()
realized_load <- c()
fitness <- c()
gen <- c()
for(i in 1:101){
generation <- gen_and_rel_df[gen_and_rel_df$Generation == i,]
heterozygo <- c(heterozygo, mean(generation$uniquemutation))
genetic_load <- c(genetic_load, mean(generation$totalLoad))
realized_load <- c(realized_load, mean(generation$RelzLoad))
fitness <- c(fitness, mean(generation$fitness))
gen <- c(gen, i)
}
realized_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = realized_load), color = "orange", size = 1 ) +  geom_line(data = mean_rm_df, aes(x = generation, y = realized_load), color = "lightgray", size = 1 ) +
theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
load_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = genetic_load), color = "orange", size = 1 ) +  geom_line(data = mean_rm_df, aes(x = generation, y = genetic_load), color = "lightgray", size = 1 ) + theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
fitness_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = fitness), color = "orange", size = 1 ) + geom_line(data = mean_rm_df, aes(x = generation, y = fitness), color = "lightgray", size = 1 ) +  theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
hetero_graph <- ggplot() + geom_line(data = mean_genload_df, aes(x = generation, y = heterozygosity), color = "orange", size = 1 ) + geom_line(data = mean_rm_df, aes(x = generation, y = heterozygosity), color = "lightgray", size = 1 ) +  theme(
plot.background = element_rect(fill = "black"),
panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "gray30"),
panel.grid.minor = element_line(color = "gray20"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
plot.title = element_text(color = "white", hjust = 0.5),
legend.background = element_rect(fill = "black"),
legend.text = element_text(color = "white")
)
combined_plot <- load_graph + realized_graph + fitness_graph + hetero_graph + plot_layout(ncol = 4)
print(combined_plot)
